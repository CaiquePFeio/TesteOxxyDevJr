@model Teste.Models.Veiculo

@{
    ViewBag.Title = "Cadastrar Veículos";
}
<h2>@ViewBag.Title</h2>

<p>Informe nos campos abaixo as informações do veículo.</p>

@using (Html.BeginForm("create", "veiculos", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group" style="margin-left: 0">
            @Html.LabelFor(model => model.Placa)
            @Html.EditorFor(model => model.Placa, new { htmlAttributes = new { @class = "form-control", @placeholder = "EX: DEC7836", @maxLength = 7 } })
            @Html.ValidationMessageFor(model => model.Placa, "", new { @class = "text-danger" })
        </div>

        <div class="form-group" style="margin-left: 0">
            @Html.LabelFor(model => model.Renavam)
            @Html.EditorFor(model => model.Renavam, new { htmlAttributes = new { @class = "form-control", @placeholder = "EX: 0012345678", @maxLength = 11 } })
            @Html.ValidationMessageFor(model => model.Renavam, "", new { @class = "text-danger" })
        </div>

        <div class="form-group" style="margin-left: 0">
            @Html.LabelFor(model => model.Nome)
            @Html.EditorFor(model => model.Nome, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Nome, "", new { @class = "text-danger" })
        </div>

        <div class="form-group" style="margin-left: 0">
            @Html.LabelFor(model => model.CPF)
            @Html.EditorFor(model => model.CPF, new { htmlAttributes = new { @class = "form-control", @placeholder = "EX: 111.222.333-44", @maxLength = 14 } })
            @Html.ValidationMessageFor(model => model.CPF, "", new { @class = "text-danger" })
        </div>

        <div class="form-group" style="margin-left: 0">
            @Html.LabelFor(model => model.Imagens)
            @Html.TextBoxFor(model => model.Imagens, new { type = "file", accept = "image/*", multiple = "multiple" })
            @Html.ValidationMessageFor(model => model.Imagens, "", new { @class = "text-danger" })
        </div>

        <div class="form-group" style="margin-left: 0">
            @Html.LabelFor(model => model.Bloqueado)
            @Html.EditorFor(model => model.Bloqueado)
            @Html.ValidationMessageFor(model => model.Bloqueado, "", new { @class = "text-danger" })
        </div>

        <div class="form-group" style="margin-left: 0">
            <input type="submit" value="Salvar" class="btn btn-primary" />
        </div>
    </div>
}

<div>
    @Html.ActionLink("Retornar para a listagem", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}